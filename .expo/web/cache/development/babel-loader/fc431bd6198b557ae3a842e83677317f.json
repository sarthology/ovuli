{"ast":null,"code":"import * as React from 'react';\nexport default function useStateGetters() {\n  var stateGetters = React.useRef({});\n  var getStateForRoute = React.useCallback(function (routeKey) {\n    return stateGetters.current[routeKey] === undefined ? undefined : stateGetters.current[routeKey]();\n  }, [stateGetters]);\n  var addStateGetter = React.useCallback(function (key, getter) {\n    stateGetters.current[key] = getter;\n    return function () {\n      stateGetters.current[key] = undefined;\n    };\n  }, []);\n  return {\n    getStateForRoute: getStateForRoute,\n    addStateGetter: addStateGetter\n  };\n}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["stateGetters","React","getStateForRoute","routeKey","addStateGetter"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAOA,eAAe,SAAA,eAAA,GAA2B;AACxC,MAAMA,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB;AAEA,MAAMC,gBAAgB,GAAGD,KAAK,CAALA,WAAAA,CACtBE,UAAAA,QAAD;AAAA,WACEH,YAAY,CAAZA,OAAAA,CAAAA,QAAAA,MAAAA,SAAAA,GAAAA,SAAAA,GAEIA,YAAY,CAAZA,OAAAA,CAJiBC,QAIjBD,GAHN;AAAA,GADuBC,EAKvB,CALF,YAKE,CALuBA,CAAzB;AAQA,MAAMG,cAAc,GAAG,KAAK,CAAL,WAAA,CACrB,UAAA,GAAA,EAAA,MAAA,EAA+C;AAC7CJ,IAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,MAAAA;AAEA,WAAO,YAAM;AAEXA,MAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,SAAAA;AAFF,KAAA;AAJmB,GAAA,EAAvB,EAAuB,CAAvB;AAYA,SAAO;AACLE,IAAAA,gBADK,EACLA,gBADK;AAELE,IAAAA,cAAAA,EAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\nimport { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<Record<string, NavigatorStateGetter>>({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) =>\n      stateGetters.current[routeKey] === undefined\n        ? undefined\n        : stateGetters.current[routeKey](),\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        // @ts-ignore\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}