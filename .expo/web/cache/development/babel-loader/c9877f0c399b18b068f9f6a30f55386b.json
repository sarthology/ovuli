{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\src\\\\screens\\\\ProfileScreen\\\\YourNameScreen.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport top from \"../../../wireframes/assets/Your_Name/top.png\";\nimport bottom from \"../../../wireframes/assets/Your_Name/bottom.png\";\nimport { AntDesign } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\n\nvar YourNameScreen = function (_Component) {\n  _inherits(YourNameScreen, _Component);\n\n  function YourNameScreen(props) {\n    var _this;\n\n    _classCallCheck(this, YourNameScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YourNameScreen).call(this, props));\n\n    _this.saveName = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('Name', _this.state.text));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n              _this.props.navigation.navigate('DoYouKnow');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]]);\n    };\n\n    _this.state = {\n      text: '',\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(YourNameScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'PT-Sans': require(\"../../../wireframes/assets/fonts/PTC55F.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, this.state.fontLoaded ? React.createElement(React.Fragment, null, React.createElement(Image, {\n        source: top,\n        style: styles.top,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Text, {\n        style: [styles.nameText, {\n          fontFamily: 'PT-Sans',\n          fontSize: 30,\n          fontWeight: 'bold'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, \"How\"), React.createElement(Text, {\n        style: styles.nameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, \" can we call you?\")), React.createElement(Image, {\n        source: bottom,\n        style: styles.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputContainer,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        placeholder: \"Enter your name here\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        value: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.saveName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, \"Continue\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        name: \"arrowright\",\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      })), ' ') : null);\n    }\n  }]);\n\n  return YourNameScreen;\n}(Component);\n\nexport { YourNameScreen as default };\nvar styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  nameText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 150,\n    marginBottom: 27,\n    fontFamily: 'PT-Sans',\n    fontSize: 25\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963'\n  },\n  inputContainer: {\n    color: '#f88c70',\n    fontSize: 21,\n    margin: 15,\n    height: 60,\n    borderBottomWidth: 5,\n    borderBottomColor: '#f2f7fd',\n    padding: 15,\n    width: '85%'\n  },\n  buttonContainer: {\n    backgroundColor: '#45CE30',\n    borderRadius: 10,\n    padding: 8,\n    height: 40,\n    alignContent: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    width: '20%',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.5\n  }\n});","map":{"version":3,"sources":["F:/MobileProjects/ovuli/src/screens/ProfileScreen/YourNameScreen.js"],"names":["React","Component","top","bottom","AntDesign","Font","YourNameScreen","props","saveName","AsyncStorage","setItem","state","text","console","log","navigation","navigate","fontLoaded","loadAsync","require","setState","styles","container","flexDirection","nameText","fontFamily","fontSize","fontWeight","inputContainer","button","buttonText","alignSelf","color","StyleSheet","create","position","right","left","flex","justifyContent","alignItems","backgroundColor","marginTop","Dimensions","get","height","marginBottom","borderWidth","width","borderRadius","borderColor","textAlign","padding","paddingLeft","margin","borderBottomWidth","borderBottomColor","buttonContainer","alignContent","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  AsyncStorage,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport top from '../../../wireframes/assets/Your_Name/top.png';\r\nimport bottom from '../../../wireframes/assets/Your_Name/bottom.png';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\n\r\nexport default class YourNameScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: '', fontLoaded: false };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Font.loadAsync({\r\n      'PT-Sans': require('../../../wireframes/assets/fonts/PTC55F.ttf'),\r\n    });\r\n    this.setState({ fontLoaded: true });\r\n  }\r\n\r\n  saveName = async () => {\r\n    // Saving the Name in Asyncstorage\r\n    try {\r\n      await AsyncStorage.setItem('Name', this.state.text);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    // Navigating to the next screen\r\n    this.props.navigation.navigate('DoYouKnow');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.fontLoaded ? (\r\n          <>\r\n            <Image source={top} style={styles.top} />\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <Text\r\n                style={[\r\n                  styles.nameText,\r\n                  { fontFamily: 'PT-Sans', fontSize: 30, fontWeight: 'bold' },\r\n                ]}\r\n              >\r\n                How\r\n              </Text>\r\n              <Text style={styles.nameText}> can we call you?</Text>\r\n            </View>\r\n            <Image source={bottom} style={styles.bottom} />\r\n            <TextInput\r\n              style={styles.inputContainer}\r\n              underlineColorAndroid=\"transparent\"\r\n              autoCapitalize=\"none\"\r\n              placeholder=\"Enter your name here\"\r\n              onChangeText={text => this.setState({ text })}\r\n              value={this.state.text}\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={this.saveName}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n              <AntDesign\r\n                style={{ alignSelf: 'center', color: '#F55963' }}\r\n                name=\"arrowright\"\r\n                size={18}\r\n              />\r\n            </TouchableOpacity>{' '}\r\n          </>\r\n        ) : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  top: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n  bottom: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  nameText: {\r\n    alignSelf: 'center',\r\n    marginTop: Dimensions.get('window').height / 3 - 150,\r\n    marginBottom: 27,\r\n    fontFamily: 'PT-Sans',\r\n    fontSize: 25,\r\n  },\r\n  button: {\r\n    borderWidth: 2,\r\n    width: 120,\r\n    borderRadius: 5,\r\n    marginTop: -25,\r\n    borderColor: '#F55963',\r\n    position: 'absolute',\r\n    right: 30,\r\n    top: Dimensions.get('window').height - 50,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    padding: 5,\r\n    paddingLeft: 10,\r\n    color: '#F55963',\r\n  },\r\n  inputContainer: {\r\n    color: '#f88c70',\r\n    fontSize: 21,\r\n    margin: 15,\r\n    height: 60,\r\n    borderBottomWidth: 5,\r\n    borderBottomColor: '#f2f7fd',\r\n    padding: 15,\r\n    width: '85%',\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: '#45CE30',\r\n    borderRadius: 10,\r\n    padding: 8,\r\n    height: 40,\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000000',\r\n    width: '20%',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowRadius: 10,\r\n    shadowOpacity: 0.5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}