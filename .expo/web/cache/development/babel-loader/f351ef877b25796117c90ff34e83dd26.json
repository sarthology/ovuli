{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\item.js\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Calendar from \"../calendar\";\nimport styleConstructor from \"./style\";\n\nvar CalendarListItem = function (_Component) {\n  _inherits(CalendarListItem, _Component);\n\n  function CalendarListItem(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalendarListItem).call(this, props));\n\n    _this.onPressArrowLeft = function (_, month) {\n      var monthClone = month.clone();\n\n      if (_this.props.onPressArrowLeft) {\n        _this.props.onPressArrowLeft(_, monthClone);\n      } else if (_this.props.scrollToMonth) {\n        var currentMonth = monthClone.getMonth();\n        monthClone.addMonths(-1);\n\n        while (monthClone.getMonth() === currentMonth) {\n          monthClone.setDate(monthClone.getDate() - 1);\n        }\n\n        _this.props.scrollToMonth(monthClone);\n      }\n    };\n\n    _this.onPressArrowRight = function (_, month) {\n      var monthClone = month.clone();\n\n      if (_this.props.onPressArrowRight) {\n        _this.props.onPressArrowRight(_, monthClone);\n      } else if (_this.props.scrollToMonth) {\n        monthClone.addMonths(1);\n\n        _this.props.scrollToMonth(monthClone);\n      }\n    };\n\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(CalendarListItem, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var r1 = this.props.item;\n      var r2 = nextProps.item;\n      return r1.toString('yyyy MM') !== r2.toString('yyyy MM') || !!(r2.propbump && r2.propbump !== r1.propbump);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var row = this.props.item;\n\n      if (row.getTime) {\n        return React.createElement(Calendar, {\n          theme: this.props.theme,\n          style: [{\n            height: this.props.calendarHeight,\n            width: this.props.calendarWidth\n          }, this.style.calendar, this.props.style],\n          current: row,\n          hideArrows: this.props.hideArrows,\n          hideExtraDays: this.props.hideExtraDays,\n          disableMonthChange: true,\n          markedDates: this.props.markedDates,\n          markingType: this.props.markingType,\n          hideDayNames: this.props.hideDayNames,\n          onDayPress: this.props.onDayPress,\n          onDayLongPress: this.props.onDayLongPress,\n          displayLoadingIndicator: this.props.displayLoadingIndicator,\n          minDate: this.props.minDate,\n          maxDate: this.props.maxDate,\n          firstDay: this.props.firstDay,\n          monthFormat: this.props.monthFormat,\n          dayComponent: this.props.dayComponent,\n          disabledByDefault: this.props.disabledByDefault,\n          showWeekNumbers: this.props.showWeekNumbers,\n          renderArrow: this.props.renderArrow,\n          onPressArrowLeft: this.props.horizontal ? this.onPressArrowLeft : this.props.onPressArrowLeft,\n          onPressArrowRight: this.props.horizontal ? this.onPressArrowRight : this.props.onPressArrowRight,\n          headerStyle: this.props.horizontal ? this.props.headerStyle : undefined,\n          accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n          importantForAccessibility: this.props.importantForAccessibility,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        });\n      } else {\n        var text = row.toString();\n        return React.createElement(View, {\n          style: [{\n            height: this.props.calendarHeight,\n            width: this.props.calendarWidth\n          }, this.style.placeholder],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          }\n        }, React.createElement(Text, {\n          allowFontScaling: false,\n          style: this.style.placeholderText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          }\n        }, text));\n      }\n    }\n  }]);\n\n  return CalendarListItem;\n}(Component);\n\nCalendarListItem.displayName = 'IGNORE';\nCalendarListItem.defaultProps = {\n  hideArrows: true,\n  hideExtraDays: true\n};\nexport default CalendarListItem;","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-calendars/src/calendar-list/item.js"],"names":["React","Component","Calendar","styleConstructor","CalendarListItem","props","onPressArrowLeft","_","month","monthClone","clone","scrollToMonth","currentMonth","getMonth","addMonths","setDate","getDate","onPressArrowRight","style","theme","nextProps","r1","item","r2","toString","propbump","row","getTime","height","calendarHeight","width","calendarWidth","calendar","hideArrows","hideExtraDays","markedDates","markingType","hideDayNames","onDayPress","onDayLongPress","displayLoadingIndicator","minDate","maxDate","firstDay","monthFormat","dayComponent","disabledByDefault","showWeekNumbers","renderArrow","horizontal","headerStyle","undefined","accessibilityElementsHidden","importantForAccessibility","text","placeholder","placeholderText","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Text, View} from 'react-native';\nimport Calendar from '../calendar';\nimport styleConstructor from './style';\n\n\nclass CalendarListItem extends Component {\n  static displayName = 'IGNORE';\n  \n  static defaultProps = {\n    hideArrows: true,\n    hideExtraDays: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const r1 = this.props.item;\n    const r2 = nextProps.item;\n    return r1.toString('yyyy MM') !== r2.toString('yyyy MM') || !!(r2.propbump && r2.propbump !== r1.propbump);\n  }\n\n  onPressArrowLeft = (_, month) => {\n    const monthClone = month.clone();\n\n    if (this.props.onPressArrowLeft) {\n      this.props.onPressArrowLeft(_, monthClone);\n    } else if (this.props.scrollToMonth) {\n      const currentMonth = monthClone.getMonth();\n      monthClone.addMonths(-1);\n\n      // Make sure we actually get the previous month, not just 30 days before currentMonth.\n      while (monthClone.getMonth() === currentMonth) {\n        monthClone.setDate(monthClone.getDate() - 1);\n      }\n\n      this.props.scrollToMonth(monthClone);\n    }\n  }\n\n  onPressArrowRight = (_, month) => {\n    const monthClone = month.clone();\n\n    if (this.props.onPressArrowRight) {\n      this.props.onPressArrowRight(_, monthClone);\n    } else if (this.props.scrollToMonth) {\n      monthClone.addMonths(1);\n      this.props.scrollToMonth(monthClone);\n    }\n  }\n\n  render() {\n    const row = this.props.item;\n\n    if (row.getTime) {\n      return (\n        <Calendar\n          theme={this.props.theme}\n          style={[{height: this.props.calendarHeight, width: this.props.calendarWidth}, this.style.calendar, this.props.style]}\n          current={row}\n          hideArrows={this.props.hideArrows}\n          hideExtraDays={this.props.hideExtraDays}\n          disableMonthChange\n          markedDates={this.props.markedDates}\n          markingType={this.props.markingType}\n          hideDayNames={this.props.hideDayNames}\n          onDayPress={this.props.onDayPress}\n          onDayLongPress={this.props.onDayLongPress}\n          displayLoadingIndicator={this.props.displayLoadingIndicator}\n          minDate={this.props.minDate}\n          maxDate={this.props.maxDate}\n          firstDay={this.props.firstDay}\n          monthFormat={this.props.monthFormat}\n          dayComponent={this.props.dayComponent}\n          disabledByDefault={this.props.disabledByDefault}\n          showWeekNumbers={this.props.showWeekNumbers}\n          renderArrow={this.props.renderArrow}\n          onPressArrowLeft={this.props.horizontal ? this.onPressArrowLeft : this.props.onPressArrowLeft}\n          onPressArrowRight={this.props.horizontal ? this.onPressArrowRight : this.props.onPressArrowRight}\n          headerStyle={this.props.horizontal ? this.props.headerStyle : undefined}\n          accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n          importantForAccessibility={this.props.importantForAccessibility} // Android\n        />\n      );\n    } else {\n      const text = row.toString();\n\n      return (\n        <View style={[{height: this.props.calendarHeight, width: this.props.calendarWidth}, this.style.placeholder]}>\n          <Text allowFontScaling={false} style={this.style.placeholderText}>{text}</Text>\n        </View>\n      );\n    }\n  }\n}\n\nexport default CalendarListItem;\n"]},"metadata":{},"sourceType":"module"}