{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\node_modules\\\\react-native-smooth-picker\\\\src\\\\SmoothPicker.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport onSelect from \"./functions/onSelect\";\nimport alignSelect from \"./functions/alignSelect\";\nimport { marginStart, marginEnd } from \"./functions/onMargin\";\n\nvar SmoothPicker = function (_Component) {\n  _inherits(SmoothPicker, _Component);\n\n  function SmoothPicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SmoothPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SmoothPicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.widthParent = null;\n    _this.heightParent = null;\n    _this.onMomentum = false;\n    _this.fingerAction = false;\n    _this.options = [];\n    _this.countItems = 0;\n    _this.state = {\n      selected: _this.props.initialScrollToIndex || 1,\n      scrollPosition: null\n    };\n\n    _this._alignAfterMount = function () {\n      try {\n        var _this$props = _this.props,\n            horizontal = _this$props.horizontal,\n            scrollAnimation = _this$props.scrollAnimation,\n            initialScrollToIndex = _this$props.initialScrollToIndex;\n\n        if (typeof initialScrollToIndex !== \"undefined\") {\n          var option = _this.options[initialScrollToIndex];\n\n          if (option) {\n            alignSelect(horizontal, scrollAnimation, option, _this.refs[\"smoothPicker\"]);\n          }\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    _this._save = function (index, layout, item, horizontal) {\n      _this.options[index] = {\n        layout: layout,\n        item: item,\n        index: index\n      };\n\n      for (var _index in _this.options) {\n        if (horizontal) {\n          var left = _this.options[_index - 1] ? _this.options[_index - 1].right : 0;\n          var right = _this.options[_index - 1] ? left + _this.options[_index].layout.width : _this.options[_index].layout.width;\n          _this.options[_index].right = right;\n          _this.options[_index].left = left;\n        } else {\n          var top = _this.options[_index - 1] ? _this.options[_index - 1].bottom : 0;\n          var bottom = _this.options[_index - 1] ? top + _this.options[_index].layout.height : _this.options[_index].layout.height;\n          _this.options[_index].bottom = bottom;\n          _this.options[_index].top = top;\n        }\n      }\n    };\n\n    _this._handleSelection = function (item, index, scrollPosition) {\n      _this.props.onSelected({\n        item: item,\n        index: index\n      });\n\n      _this.setState({\n        selected: index,\n        scrollPosition: scrollPosition\n      });\n    };\n\n    _this._renderItem = function (info) {\n      var _this$props2 = _this.props,\n          data = _this$props2.data,\n          renderItem = _this$props2.renderItem,\n          horizontal = _this$props2.horizontal,\n          offsetSelection = _this$props2.offsetSelection,\n          startMargin = _this$props2.startMargin,\n          endMargin = _this$props2.endMargin;\n      var item = info.item,\n          index = info.index;\n      return React.createElement(View, {\n        key: index,\n        onLayout: function onLayout(_ref) {\n          var layout = _ref.nativeEvent.layout;\n\n          _this._save(index, layout, item, horizontal);\n\n          if (_this.countItems === data.length) {\n            _this.countItems = 0;\n\n            _this._alignAfterMount();\n          } else {\n            _this.countItems = _this.countItems + 1;\n          }\n        },\n        style: {\n          marginLeft: marginStart(horizontal, index, _this.widthParent, offsetSelection, startMargin),\n          marginRight: marginEnd(horizontal, data.length - 1, index, _this.widthParent, offsetSelection, endMargin),\n          marginTop: marginStart(!horizontal, index, _this.heightParent, offsetSelection, startMargin),\n          marginBottom: marginEnd(!horizontal, data.length - 1, index, _this.heightParent, offsetSelection, endMargin)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, renderItem(info));\n    };\n\n    return _this;\n  }\n\n  _createClass(SmoothPicker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.selected !== this.state.selected;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          horizontal = _this$props3.horizontal,\n          magnet = _this$props3.magnet,\n          snapInterval = _this$props3.snapInterval,\n          snapToAlignment = _this$props3.snapToAlignment;\n      var snap = {};\n\n      if (snapInterval) {\n        snap = {\n          snapToInterval: snapInterval,\n          snapToAlignment: snapToAlignment\n        };\n      }\n\n      return React.createElement(FlatList, _extends({}, this.props, snap, {\n        onLayout: function onLayout(_ref2) {\n          var layout = _ref2.nativeEvent.layout;\n          _this2.widthParent = layout.width;\n          _this2.heightParent = layout.height;\n        },\n        onScroll: function onScroll(_ref3) {\n          var nativeEvent = _ref3.nativeEvent;\n\n          if (_this2.fingerAction) {\n            onSelect(nativeEvent, _this2.state.selected, _this2.options, _this2._handleSelection, _this2.state.scrollPosition, horizontal);\n          }\n        },\n        getItemLayout: function getItemLayout(_, index) {\n          var itemLayout;\n\n          if (snapInterval) {\n            itemLayout = {\n              length: snapInterval,\n              offset: snapInterval * index,\n              index: index\n            };\n          } else {\n            itemLayout = {\n              length: _this2.options[index] ? horizontal ? _this2.options[index].layout.width : _this2.options[index].layout.height : 30,\n              offset: _this2.options[index] ? horizontal ? _this2.options[index].left : _this2.options[index].top : 30 * index,\n              index: index\n            };\n          }\n\n          return itemLayout;\n        },\n        onScrollBeginDrag: function onScrollBeginDrag() {\n          _this2.onMomentum = true;\n          _this2.fingerAction = true;\n        },\n        onMomentumScrollEnd: function onMomentumScrollEnd() {\n          _this2.fingerAction = false;\n\n          if (_this2.onMomentum && magnet && !snapInterval) {\n            _this2.onMomentum = false;\n            alignSelect(_this2.props.horizontal, _this2.props.scrollAnimation, _this2.options[_this2.state.selected], _this2.refs[\"smoothPicker\"]);\n          }\n        },\n        renderItem: this._renderItem,\n        ref: \"smoothPicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }));\n    }\n  }]);\n\n  return SmoothPicker;\n}(Component);\n\nSmoothPicker.defaultProps = {\n  onSelected: function onSelected(data) {\n    return data;\n  },\n  horizontal: false,\n  offsetSelection: 0,\n  decelerationRate: 0.85,\n  magnet: false,\n  scrollAnimation: false,\n  snapInterval: null,\n  snapToAlignment: \"center\"\n};\nSmoothPicker.propTypes = {\n  onSelected: PropTypes.func.isRequired,\n  offsetSelection: PropTypes.number.isRequired,\n  scrollAnimation: PropTypes.bool.isRequired,\n  magnet: PropTypes.bool.isRequired,\n  snapInterval: PropTypes.number,\n  initialScrollToIndex: PropTypes.number,\n  startMargin: PropTypes.number,\n  endMargin: PropTypes.number\n};\nexport default SmoothPicker;","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-smooth-picker/src/SmoothPicker.js"],"names":["React","Component","PropTypes","onSelect","alignSelect","marginStart","marginEnd","SmoothPicker","widthParent","heightParent","onMomentum","fingerAction","options","countItems","state","selected","props","initialScrollToIndex","scrollPosition","_alignAfterMount","horizontal","scrollAnimation","option","refs","error","console","log","_save","index","layout","item","left","right","width","top","bottom","height","_handleSelection","onSelected","setState","_renderItem","info","data","renderItem","offsetSelection","startMargin","endMargin","nativeEvent","length","marginLeft","marginRight","marginTop","marginBottom","nextProps","nextState","magnet","snapInterval","snapToAlignment","snap","snapToInterval","_","itemLayout","offset","defaultProps","decelerationRate","propTypes","func","isRequired","number","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, FlatList } from \"react-native\";\nimport onSelect from \"./functions/onSelect\";\nimport alignSelect from \"./functions/alignSelect\";\nimport { marginStart, marginEnd } from \"./functions/onMargin\";\n\nclass SmoothPicker extends Component {\n  widthParent = null;\n  heightParent = null;\n  onMomentum = false;\n  fingerAction = false;\n  options = [];\n  countItems = 0;\n\n  state = {\n    selected: this.props.initialScrollToIndex || 1,\n    scrollPosition: null\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.selected !== this.state.selected;\n  }\n\n  _alignAfterMount = () => {\n    try {\n      const { horizontal, scrollAnimation, initialScrollToIndex } = this.props;\n      if (typeof initialScrollToIndex !== \"undefined\") {\n        const option = this.options[initialScrollToIndex];\n        if (option) {\n          alignSelect(\n            horizontal,\n            scrollAnimation,\n            option,\n            this.refs[\"smoothPicker\"]\n          );\n        }\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  _save = (index, layout, item, horizontal) => {\n    this.options[index] = {\n      layout,\n      item,\n      index\n    };\n\n    for (let index in this.options) {\n      if (horizontal) {\n        let left = this.options[index - 1] ? this.options[index - 1].right : 0;\n        let right = this.options[index - 1]\n          ? left + this.options[index].layout.width\n          : this.options[index].layout.width;\n        this.options[index].right = right;\n        this.options[index].left = left;\n      } else {\n        let top = this.options[index - 1] ? this.options[index - 1].bottom : 0;\n        let bottom = this.options[index - 1]\n          ? top + this.options[index].layout.height\n          : this.options[index].layout.height;\n        this.options[index].bottom = bottom;\n        this.options[index].top = top;\n      }\n    }\n  };\n\n  _handleSelection = (item, index, scrollPosition) => {\n    this.props.onSelected({ item, index });\n    this.setState({\n      selected: index,\n      scrollPosition: scrollPosition\n    });\n  };\n\n  _renderItem = info => {\n    const {\n      data,\n      renderItem,\n      horizontal,\n      offsetSelection,\n      startMargin,\n      endMargin\n    } = this.props;\n    const { item, index } = info;\n    return (\n      <View\n        key={index}\n        onLayout={({ nativeEvent: { layout } }) => {\n          this._save(index, layout, item, horizontal);\n          if (this.countItems === data.length) {\n            this.countItems = 0;\n            this._alignAfterMount();\n          }else{\n            this.countItems = this.countItems + 1;\n          }\n        }}\n        style={{\n          marginLeft: marginStart(\n            horizontal,\n            index,\n            this.widthParent,\n            offsetSelection,\n            startMargin\n          ),\n          marginRight: marginEnd(\n            horizontal,\n            data.length - 1,\n            index,\n            this.widthParent,\n            offsetSelection,\n            endMargin\n          ),\n          marginTop: marginStart(\n            !horizontal,\n            index,\n            this.heightParent,\n            offsetSelection,\n            startMargin\n          ),\n          marginBottom: marginEnd(\n            !horizontal,\n            data.length - 1,\n            index,\n            this.heightParent,\n            offsetSelection,\n            endMargin\n          )\n        }}\n      >\n        {renderItem(info)}\n      </View>\n    );\n  };\n\n  render() {\n    const { horizontal, magnet, snapInterval, snapToAlignment } = this.props;\n\n    let snap = {};\n    if (snapInterval) {\n      snap = {\n        snapToInterval: snapInterval,\n        snapToAlignment: snapToAlignment\n      };\n    }\n    return (\n      <FlatList\n        {...this.props}\n        {...snap}\n        onLayout={({ nativeEvent: { layout } }) => {\n          this.widthParent = layout.width;\n          this.heightParent = layout.height;\n        }}\n        onScroll={({ nativeEvent }) => {\n          if (this.fingerAction) {\n            onSelect(\n              nativeEvent,\n              this.state.selected,\n              this.options,\n              this._handleSelection,\n              this.state.scrollPosition,\n              horizontal\n            );\n          }\n        }}\n        getItemLayout={(_, index) => {\n          let itemLayout;\n          if (snapInterval) {\n            itemLayout = {\n              length: snapInterval,\n              offset: snapInterval * index,\n              index\n            };\n          } else {\n            itemLayout = {\n              length: this.options[index]\n                ? horizontal\n                  ? this.options[index].layout.width\n                  : this.options[index].layout.height\n                : 30,\n              offset: this.options[index]\n                ? horizontal\n                  ? this.options[index].left\n                  : this.options[index].top\n                : 30 * index,\n              index\n            };\n          }\n          return itemLayout;\n        }}\n        onScrollBeginDrag={() => {\n          this.onMomentum = true;\n          this.fingerAction = true;\n        }}\n        onMomentumScrollEnd={() => {\n          this.fingerAction = false;\n          if (this.onMomentum && magnet && !snapInterval) {\n            this.onMomentum = false;\n            alignSelect(\n              this.props.horizontal,\n              this.props.scrollAnimation,\n              this.options[this.state.selected],\n              this.refs[\"smoothPicker\"]\n            );\n          }\n        }}\n        renderItem={this._renderItem}\n        ref={\"smoothPicker\"}\n      />\n    );\n  }\n}\n\nSmoothPicker.defaultProps = {\n  onSelected: data => data,\n  horizontal: false,\n  offsetSelection: 0,\n  decelerationRate: 0.85,\n  magnet: false,\n  scrollAnimation: false,\n  snapInterval: null,\n  snapToAlignment: \"center\"\n};\n\nSmoothPicker.propTypes = {\n  onSelected: PropTypes.func.isRequired,\n  offsetSelection: PropTypes.number.isRequired,\n  scrollAnimation: PropTypes.bool.isRequired,\n  magnet: PropTypes.bool.isRequired,\n  snapInterval: PropTypes.number,\n  initialScrollToIndex: PropTypes.number,\n  startMargin: PropTypes.number,\n  endMargin: PropTypes.number\n};\n\nexport default SmoothPicker;\n"]},"metadata":{},"sourceType":"module"}