{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nexport var VelocityTracker = function () {\n  function VelocityTracker() {\n    _classCallCheck(this, VelocityTracker);\n\n    this.history = [];\n    this.lastPosition = undefined;\n    this.lastTimestamp = undefined;\n  }\n\n  _createClass(VelocityTracker, [{\n    key: \"add\",\n    value: function add(position) {\n      var timestamp = new Date().valueOf();\n\n      if (this.lastPosition && timestamp > this.lastTimestamp) {\n        var diff = position - this.lastPosition;\n\n        if (diff > 0.001 || diff < -0.001) {\n          this.history.push(diff / (timestamp - this.lastTimestamp));\n        }\n      }\n\n      this.lastPosition = position;\n      this.lastTimestamp = timestamp;\n    }\n  }, {\n    key: \"estimateSpeed\",\n    value: function estimateSpeed() {\n      var finalTrend = this.history.slice(-3);\n      var sum = finalTrend.reduce(function (r, v) {\n        return r + v;\n      }, 0);\n      return sum / finalTrend.length;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.history = [];\n      this.lastPosition = undefined;\n      this.lastTimestamp = undefined;\n    }\n  }]);\n\n  return VelocityTracker;\n}();","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-calendars/src/input.js"],"names":["VelocityTracker","history","lastPosition","undefined","lastTimestamp","position","timestamp","Date","valueOf","diff","push","finalTrend","slice","sum","reduce","r","v","length"],"mappings":";;AAAA,WAAaA,eAAb;AACE,6BAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,YAAL,GAAoBC,SAApB;AACA,SAAKC,aAAL,GAAqBD,SAArB;AACD;;AALH;AAAA;AAAA,wBAOME,QAPN,EAOgB;AACZ,UAAMC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;;AACA,UAAI,KAAKN,YAAL,IAAqBI,SAAS,GAAG,KAAKF,aAA1C,EAAyD;AACvD,YAAMK,IAAI,GAAGJ,QAAQ,GAAG,KAAKH,YAA7B;;AACA,YAAIO,IAAI,GAAG,KAAP,IAAgBA,IAAI,GAAG,CAAC,KAA5B,EAAmC;AACjC,eAAKR,OAAL,CAAaS,IAAb,CAAkBD,IAAI,IAAIH,SAAS,GAAG,KAAKF,aAArB,CAAtB;AACD;AACF;;AACD,WAAKF,YAAL,GAAoBG,QAApB;AACA,WAAKD,aAAL,GAAqBE,SAArB;AACD;AAjBH;AAAA;AAAA,oCAmBkB;AACd,UAAMK,UAAU,GAAG,KAAKV,OAAL,CAAaW,KAAb,CAAmB,CAAC,CAApB,CAAnB;AACA,UAAMC,GAAG,GAAGF,UAAU,CAACG,MAAX,CAAkB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,GAAGC,CAAd;AAAA,OAAlB,EAAmC,CAAnC,CAAZ;AACA,aAAOH,GAAG,GAAGF,UAAU,CAACM,MAAxB;AACD;AAvBH;AAAA;AAAA,4BAyBU;AACN,WAAKhB,OAAL,GAAe,EAAf;AACA,WAAKC,YAAL,GAAoBC,SAApB;AACA,WAAKC,aAAL,GAAqBD,SAArB;AACD;AA7BH;;AAAA;AAAA","sourcesContent":["export class VelocityTracker {\n  constructor() {\n    this.history = [];\n    this.lastPosition = undefined;\n    this.lastTimestamp = undefined;\n  }\n\n  add(position) {\n    const timestamp = new Date().valueOf();\n    if (this.lastPosition && timestamp > this.lastTimestamp) {\n      const diff = position - this.lastPosition;\n      if (diff > 0.001 || diff < -0.001) {\n        this.history.push(diff / (timestamp - this.lastTimestamp));\n      }\n    }\n    this.lastPosition = position;\n    this.lastTimestamp = timestamp;\n  }\n\n  estimateSpeed() {\n    const finalTrend = this.history.slice(-3);\n    const sum = finalTrend.reduce((r, v) => r + v, 0);\n    return sum / finalTrend.length;\n  }\n\n  reset() {\n    this.history = [];\n    this.lastPosition = undefined;\n    this.lastTimestamp = undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}