{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\src\\\\screens\\\\ProfileScreen\\\\DoYouKnow.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport top from \"../../../wireframes/assets/Your_Name/top.png\";\nimport { AntDesign } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\n\nvar DoYouKnow = function (_Component) {\n  _inherits(DoYouKnow, _Component);\n\n  function DoYouKnow(props) {\n    var _this;\n\n    _classCallCheck(this, DoYouKnow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoYouKnow).call(this, props));\n\n    _this.saveName = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('Name', _this.state.text));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n              if (_this.state.count == 'yes') {\n                console.log('yes wla');\n\n                _this.props.navigation.navigate('AverageCycle');\n              }\n\n              if (_this.state.count == 'no') {\n                console.log('no wlaa');\n\n                _this.props.navigation.navigate('LastPeriod');\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]]);\n    };\n\n    _this.countYes = function () {\n      return _this.setState({\n        count: 'yes'\n      });\n    };\n\n    _this.countNo = function () {\n      return _this.setState({\n        count: 'no'\n      });\n    };\n\n    _this.state = {\n      text: '',\n      count: '',\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(DoYouKnow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'PT-Sans': require(\"../../../wireframes/assets/fonts/PTC55F.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, this.state.fontLoaded ? React.createElement(React.Fragment, null, React.createElement(Image, {\n        source: top,\n        style: styles.top,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, React.createElement(Text, {\n        style: styles.nameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, \"Do you know your Cycle Length?\")), React.createElement(TouchableOpacity, {\n        style: (styles.condbutton, this.state.count == 'yes' ? {\n          borderWidth: 2,\n          width: 80,\n          borderRadius: 5,\n          top: Dimensions.get('window').height - 230,\n          borderColor: '#F55963',\n          position: 'absolute',\n          flex: 1,\n          alignContent: 'center',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          left: 80,\n          backgroundColor: '#F55963'\n        } : {\n          borderWidth: 2,\n          width: 80,\n          borderRadius: 5,\n          top: Dimensions.get('window').height - 230,\n          borderColor: '#F55963',\n          position: 'absolute',\n          flex: 1,\n          alignContent: 'center',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          left: 80,\n          backgroundColor: null\n        }),\n        onPress: this.countYes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(Text, {\n        style: (styles.condText, this.state.count == 'yes' ? {\n          fontSize: 20,\n          textAlign: 'center',\n          padding: 5,\n          color: '#F55963',\n          color: 'white'\n        } : {\n          fontSize: 20,\n          textAlign: 'center',\n          padding: 5,\n          color: '#F55963',\n          color: '#F55963'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }, \"Yes\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: (styles.condnobutton, this.state.count == 'no' ? {\n          borderWidth: 2,\n          width: 80,\n          borderRadius: 5,\n          top: Dimensions.get('window').height - 230,\n          borderColor: '#F55963',\n          position: 'absolute',\n          flex: 1,\n          alignContent: 'center',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          right: 80,\n          backgroundColor: '#F55963'\n        } : {\n          borderWidth: 2,\n          width: 80,\n          borderRadius: 5,\n          top: Dimensions.get('window').height - 230,\n          borderColor: '#F55963',\n          position: 'absolute',\n          flex: 1,\n          alignContent: 'center',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          right: 80,\n          backgroundColor: null\n        }),\n        onPress: this.countNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }, React.createElement(Text, {\n        style: (styles.condText, this.state.count == 'no' ? {\n          fontSize: 20,\n          textAlign: 'center',\n          padding: 5,\n          color: '#F55963',\n          color: 'white'\n        } : {\n          fontSize: 20,\n          textAlign: 'center',\n          padding: 5,\n          color: '#F55963',\n          color: '#F55963'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }, \"No\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.saveName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        }\n      }, \"Continue\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        name: \"arrowright\",\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        }\n      }))) : null);\n    }\n  }]);\n\n  return DoYouKnow;\n}(Component);\n\nexport { DoYouKnow as default };\nvar styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  nameText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 180,\n    marginBottom: 20,\n    paddingLeft: 20,\n    fontFamily: 'PT-Sans',\n    fontSize: 25\n  },\n  condbutton: {\n    borderWidth: 2,\n    width: 80,\n    borderRadius: 5,\n    top: Dimensions.get('window').height - 230,\n    borderColor: '#F55963',\n    position: 'absolute',\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    left: 80\n  },\n  condnobutton: {\n    borderWidth: 2,\n    width: 80,\n    borderRadius: 5,\n    top: Dimensions.get('window').height - 230,\n    borderColor: '#F55963',\n    position: 'absolute',\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    right: 80\n  },\n  condText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    color: '#F55963'\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963'\n  },\n  inputContainer: {\n    color: '#f88c70',\n    fontSize: 21,\n    margin: 15,\n    height: 60,\n    borderBottomWidth: 5,\n    borderBottomColor: '#f2f7fd',\n    padding: 15,\n    width: '85%'\n  },\n  buttonContainer: {\n    backgroundColor: '#45CE30',\n    borderRadius: 10,\n    padding: 8,\n    height: 40,\n    alignContent: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    width: '20%',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.5\n  }\n});","map":{"version":3,"sources":["F:/MobileProjects/ovuli/src/screens/ProfileScreen/DoYouKnow.js"],"names":["React","Component","top","AntDesign","Font","DoYouKnow","props","saveName","AsyncStorage","setItem","state","text","console","log","count","navigation","navigate","countYes","setState","countNo","fontLoaded","loadAsync","require","styles","container","flexDirection","nameText","condbutton","borderWidth","width","borderRadius","Dimensions","get","height","borderColor","position","flex","alignContent","justifyContent","left","backgroundColor","condText","fontSize","textAlign","padding","color","alignSelf","condnobutton","right","button","buttonText","StyleSheet","create","bottom","alignItems","marginTop","marginBottom","paddingLeft","fontFamily","inputContainer","margin","borderBottomWidth","borderBottomColor","buttonContainer","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  AsyncStorage,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport top from '../../../wireframes/assets/Your_Name/top.png';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\n\r\nexport default class DoYouKnow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: '', count: '', fontLoaded: false };\r\n    // console.log(this.state.count);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Font.loadAsync({\r\n      'PT-Sans': require('../../../wireframes/assets/fonts/PTC55F.ttf'),\r\n    });\r\n    this.setState({ fontLoaded: true });\r\n  }\r\n\r\n  saveName = async () => {\r\n    // Saving the Name in Asyncstorage\r\n    try {\r\n      await AsyncStorage.setItem('Name', this.state.text);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    if (this.state.count == 'yes') {\r\n      console.log('yes wla');\r\n      this.props.navigation.navigate('AverageCycle');\r\n    }\r\n    if (this.state.count == 'no') {\r\n      console.log('no wlaa');\r\n      this.props.navigation.navigate('LastPeriod');\r\n    }\r\n  };\r\n\r\n  countYes = () => {\r\n    // Saving the Name in Asyncstorage\r\n    return this.setState({ count: 'yes' });\r\n  };\r\n  countNo = () => {\r\n    // Saving the Name in Asyncstorage\r\n    return this.setState({ count: 'no' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.fontLoaded ? (\r\n          <>\r\n            <Image source={top} style={styles.top} />\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <Text style={styles.nameText}>Do you know your Cycle Length?</Text>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={\r\n                (styles.condbutton,\r\n                this.state.count == 'yes'\r\n                  ? {\r\n                      borderWidth: 2,\r\n                      // color: 'red',\r\n                      width: 80,\r\n\r\n                      borderRadius: 5,\r\n                      // marginTop: -170,\r\n                      // padding: 4,\r\n                      top: Dimensions.get('window').height - 230,\r\n                      borderColor: '#F55963',\r\n                      position: 'absolute',\r\n                      // right: 30,\r\n                      // top: Dimensions.get('window').height - 50,\r\n                      flex: 1,\r\n                      alignContent: 'center',\r\n                      justifyContent: 'center',\r\n                      flexDirection: 'row',\r\n                      left: 80,\r\n                      backgroundColor: '#F55963',\r\n                    }\r\n                  : {\r\n                      borderWidth: 2,\r\n                      // color: 'red',\r\n                      width: 80,\r\n\r\n                      borderRadius: 5,\r\n                      // marginTop: -170,\r\n                      // padding: 4,\r\n                      top: Dimensions.get('window').height - 230,\r\n                      borderColor: '#F55963',\r\n                      position: 'absolute',\r\n                      // right: 30,\r\n                      // top: Dimensions.get('window').height - 50,\r\n                      flex: 1,\r\n                      alignContent: 'center',\r\n                      justifyContent: 'center',\r\n                      flexDirection: 'row',\r\n                      left: 80,\r\n                      backgroundColor: null,\r\n                    })\r\n              }\r\n              onPress={this.countYes}\r\n            >\r\n              {/* {console.log(this.state.count + 'hello')} */}\r\n              <Text\r\n                style={\r\n                  (styles.condText,\r\n                  this.state.count == 'yes'\r\n                    ? {\r\n                        fontSize: 20,\r\n                        textAlign: 'center',\r\n                        padding: 5,\r\n                        // paddingLeft: 10,\r\n                        color: '#F55963',\r\n                        color: 'white',\r\n                      }\r\n                    : {\r\n                        fontSize: 20,\r\n                        textAlign: 'center',\r\n                        padding: 5,\r\n                        // paddingLeft: 10,\r\n                        color: '#F55963',\r\n                        color: '#F55963',\r\n                      })\r\n                }\r\n              >\r\n                Yes\r\n              </Text>\r\n              <AntDesign style={{ alignSelf: 'center', color: '#F55963' }} size={18} />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={\r\n                (styles.condnobutton,\r\n                this.state.count == 'no'\r\n                  ? {\r\n                      borderWidth: 2,\r\n                      width: 80,\r\n                      borderRadius: 5,\r\n                      // marginTop: -170,\r\n                      // padding: 4,\r\n                      top: Dimensions.get('window').height - 230,\r\n                      borderColor: '#F55963',\r\n                      position: 'absolute',\r\n                      // right: 30,\r\n                      // top: Dimensions.get('window').height - 50,\r\n                      flex: 1,\r\n                      alignContent: 'center',\r\n                      justifyContent: 'center',\r\n                      flexDirection: 'row',\r\n                      right: 80,\r\n                      backgroundColor: '#F55963',\r\n                    }\r\n                  : {\r\n                      borderWidth: 2,\r\n                      width: 80,\r\n                      borderRadius: 5,\r\n                      // marginTop: -170,\r\n                      // padding: 4,\r\n                      top: Dimensions.get('window').height - 230,\r\n                      borderColor: '#F55963',\r\n                      position: 'absolute',\r\n                      // right: 30,\r\n                      // top: Dimensions.get('window').height - 50,\r\n                      flex: 1,\r\n                      alignContent: 'center',\r\n                      justifyContent: 'center',\r\n                      flexDirection: 'row',\r\n                      right: 80,\r\n                      backgroundColor: null,\r\n                    })\r\n              }\r\n              onPress={this.countNo}\r\n            >\r\n              <Text\r\n                style={\r\n                  (styles.condText,\r\n                  this.state.count == 'no'\r\n                    ? {\r\n                        fontSize: 20,\r\n                        textAlign: 'center',\r\n                        padding: 5,\r\n                        // paddingLeft: 10,\r\n                        color: '#F55963',\r\n                        color: 'white',\r\n                      }\r\n                    : {\r\n                        fontSize: 20,\r\n                        textAlign: 'center',\r\n                        padding: 5,\r\n                        // paddingLeft: 10,\r\n                        color: '#F55963',\r\n                        color: '#F55963',\r\n                      })\r\n                }\r\n              >\r\n                No\r\n              </Text>\r\n              <AntDesign style={{ alignSelf: 'center', color: '#F55963' }} size={18} />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.button} onPress={this.saveName}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n              <AntDesign\r\n                style={{ alignSelf: 'center', color: '#F55963' }}\r\n                name=\"arrowright\"\r\n                size={18}\r\n              />\r\n            </TouchableOpacity>\r\n          </>\r\n        ) : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  top: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n  bottom: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  nameText: {\r\n    alignSelf: 'center',\r\n    marginTop: Dimensions.get('window').height / 3 - 180,\r\n    marginBottom: 20,\r\n    paddingLeft: 20,\r\n    fontFamily: 'PT-Sans',\r\n    fontSize: 25,\r\n  },\r\n  condbutton: {\r\n    borderWidth: 2,\r\n    // color: 'red',\r\n    width: 80,\r\n\r\n    borderRadius: 5,\r\n    // marginTop: -170,\r\n    // padding: 4,\r\n    top: Dimensions.get('window').height - 230,\r\n    borderColor: '#F55963',\r\n    position: 'absolute',\r\n    // right: 30,\r\n    // top: Dimensions.get('window').height - 50,\r\n    flex: 1,\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    left: 80,\r\n  },\r\n  condnobutton: {\r\n    borderWidth: 2,\r\n    width: 80,\r\n    borderRadius: 5,\r\n    // marginTop: -170,\r\n    // padding: 4,\r\n    top: Dimensions.get('window').height - 230,\r\n    borderColor: '#F55963',\r\n    position: 'absolute',\r\n    // right: 30,\r\n    // top: Dimensions.get('window').height - 50,\r\n    flex: 1,\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    right: 80,\r\n  },\r\n  condText: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    padding: 5,\r\n    // paddingLeft: 10,\r\n    color: '#F55963',\r\n  },\r\n  button: {\r\n    borderWidth: 2,\r\n    width: 120,\r\n    borderRadius: 5,\r\n    marginTop: -25,\r\n    borderColor: '#F55963',\r\n    position: 'absolute',\r\n    right: 30,\r\n    top: Dimensions.get('window').height - 50,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    padding: 5,\r\n    paddingLeft: 10,\r\n    color: '#F55963',\r\n  },\r\n  inputContainer: {\r\n    color: '#f88c70',\r\n    fontSize: 21,\r\n    margin: 15,\r\n    height: 60,\r\n    borderBottomWidth: 5,\r\n    borderBottomColor: '#f2f7fd',\r\n    padding: 15,\r\n    width: '85%',\r\n  },\r\n  buttonContainer: {\r\n    backgroundColor: '#45CE30',\r\n    borderRadius: 10,\r\n    padding: 8,\r\n    height: 40,\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000000',\r\n    width: '20%',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowRadius: 10,\r\n    shadowOpacity: 0.5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}