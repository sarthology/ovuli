{"ast":null,"code":"var XDate = require('xdate');\n\nfunction padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n\n  return n;\n}\n\nfunction xdateToData(xdate) {\n  var dateString = xdate.toString('yyyy-MM-dd');\n  return {\n    year: xdate.getFullYear(),\n    month: xdate.getMonth() + 1,\n    day: xdate.getDate(),\n    timestamp: XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\n\nfunction parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    return XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    return XDate(d.toString('yyyy-MM-dd'), true);\n  } else if (d.getTime) {\n    var dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return XDate(dateString, true);\n  } else if (d.year) {\n    var _dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n\n    return XDate(_dateString, true);\n  } else if (d) {\n    return XDate(d, true);\n  }\n}\n\nmodule.exports = {\n  xdateToData: xdateToData,\n  parseDate: parseDate\n};","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-calendars/src/interface.js"],"names":["XDate","require","padNumber","n","xdateToData","xdate","dateString","toString","year","getFullYear","month","getMonth","day","getDate","timestamp","getTime","parseDate","d","module","exports"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,MAAIA,CAAC,GAAG,EAAR,EAAY;AACV,WAAO,MAAMA,CAAb;AACD;;AACD,SAAOA,CAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,UAAU,GAAGD,KAAK,CAACE,QAAN,CAAe,YAAf,CAAnB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI,WAAN,EADD;AAELC,IAAAA,KAAK,EAAEL,KAAK,CAACM,QAAN,KAAmB,CAFrB;AAGLC,IAAAA,GAAG,EAAEP,KAAK,CAACQ,OAAN,EAHA;AAILC,IAAAA,SAAS,EAAEd,KAAK,CAACM,UAAD,EAAa,IAAb,CAAL,CAAwBS,OAAxB,EAJN;AAKLT,IAAAA,UAAU,EAAEA;AALP,GAAP;AAOD;;AAED,SAASU,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,MAAI,CAACA,CAAL,EAAQ;AACN;AACD,GAFD,MAEO,IAAIA,CAAC,CAACH,SAAN,EAAiB;AACtB,WAAOd,KAAK,CAACiB,CAAC,CAACH,SAAH,EAAc,IAAd,CAAZ;AACD,GAFM,MAEA,IAAIG,CAAC,YAAYjB,KAAjB,EAAwB;AAC7B,WAAOA,KAAK,CAACiB,CAAC,CAACV,QAAF,CAAW,YAAX,CAAD,EAA2B,IAA3B,CAAZ;AACD,GAFM,MAEA,IAAIU,CAAC,CAACF,OAAN,EAAe;AACpB,QAAMT,UAAU,GAAGW,CAAC,CAACR,WAAF,KAAkB,GAAlB,GAAwBP,SAAS,CAAEe,CAAC,CAACN,QAAF,KAAe,CAAjB,CAAjC,GAAwD,GAAxD,GAA8DT,SAAS,CAACe,CAAC,CAACJ,OAAF,EAAD,CAA1F;AACA,WAAOb,KAAK,CAACM,UAAD,EAAa,IAAb,CAAZ;AACD,GAHM,MAGA,IAAIW,CAAC,CAACT,IAAN,EAAY;AACjB,QAAMF,WAAU,GAAGW,CAAC,CAACT,IAAF,GAAS,GAAT,GAAeN,SAAS,CAACe,CAAC,CAACP,KAAH,CAAxB,GAAoC,GAApC,GAA0CR,SAAS,CAACe,CAAC,CAACL,GAAH,CAAtE;;AACA,WAAOZ,KAAK,CAACM,WAAD,EAAa,IAAb,CAAZ;AACD,GAHM,MAGA,IAAIW,CAAJ,EAAO;AACZ,WAAOjB,KAAK,CAACiB,CAAD,EAAI,IAAJ,CAAZ;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,WAAW,EAAXA,WADe;AAEfY,EAAAA,SAAS,EAATA;AAFe,CAAjB","sourcesContent":["const XDate = require('xdate');\n\nfunction padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n  return n;\n}\n\nfunction xdateToData(xdate) {\n  const dateString = xdate.toString('yyyy-MM-dd');\n  return {\n    year: xdate.getFullYear(),\n    month: xdate.getMonth() + 1,\n    day: xdate.getDate(),\n    timestamp: XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\n\nfunction parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) { // conventional data timestamp\n    return XDate(d.timestamp, true);\n  } else if (d instanceof XDate) { // xdate\n    return XDate(d.toString('yyyy-MM-dd'), true);\n  } else if (d.getTime) { // javascript date\n    const dateString = d.getFullYear() + '-' + padNumber((d.getMonth() + 1)) + '-' + padNumber(d.getDate());\n    return XDate(dateString, true);\n  } else if (d.year) {\n    const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n    return XDate(dateString, true);\n  } else if (d) { // timestamp number or date formatted as string\n    return XDate(d, true);\n  }\n}\n\nmodule.exports = {\n  xdateToData,\n  parseDate\n};\n\n"]},"metadata":{},"sourceType":"script"}