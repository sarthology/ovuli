{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nvar UNINTIALIZED_STATE = {};\nexport default function useSyncState(initialState) {\n  var stateRef = React.useRef(UNINTIALIZED_STATE);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current = typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  var _React$useState = React.useState(stateRef.current),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setTrackingState = _React$useState2[1];\n\n  var getState = React.useCallback(function () {\n    return stateRef.current;\n  }, []);\n  var setState = React.useCallback(function (state) {\n    if (state === stateRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n    setTrackingState(state);\n  }, []);\n  return [state, getState, setState];\n}","map":{"version":3,"sources":["useSyncState.tsx"],"names":["UNINTIALIZED_STATE","stateRef","React","initialState","getState","setState","state","setTrackingState"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,IAAMA,kBAAkB,GAAxB,EAAA;AAEA,eAAe,SAAA,YAAA,CAAA,YAAA,EAAuD;AACpE,MAAMC,QAAQ,GAAGC,KAAK,CAALA,MAAAA,CAAjB,kBAAiBA,CAAjB;;AAEA,MAAID,QAAQ,CAARA,OAAAA,KAAJ,kBAAA,EAA6C;AAC3CA,IAAAA,QAAQ,CAARA,OAAAA,GAEE,OAAA,YAAA,KAAA,UAAA,GAAqCE,YAArC,EAAA,GAFFF,YAAAA;AAGD;;AAPmE,wBASlCC,KAAK,CAALA,QAAAA,CAAeD,QAAQ,CAAzD,OAAkCC,CATkC;AAAA;AAAA,MAS9D,KAT8D;AAAA,MAS9D,gBAT8D;;AAWpE,MAAME,QAAQ,GAAGF,KAAK,CAALA,WAAAA,CAAkB;AAAA,WAAMD,QAAQ,CAAhCC,OAAkB;AAAA,GAAlBA,EAAjB,EAAiBA,CAAjB;AAEA,MAAMG,QAAQ,GAAG,KAAK,CAAL,WAAA,CAAmBC,UAAAA,KAAD,EAAc;AAC/C,QAAIA,KAAK,KAAKL,QAAQ,CAAtB,OAAA,EAAgC;AAC9B;AACD;;AAEDA,IAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACAM,IAAAA,gBAAgB,CAAhBA,KAAgB,CAAhBA;AANe,GAAA,EAAjB,EAAiB,CAAjB;AASA,SAAO,CAAA,KAAA,EAAA,QAAA,EAAP,QAAO,CAAP;AACD","sourcesContent":["import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-ignore\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [state, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n    setTrackingState(state);\n  }, []);\n\n  return [state, getState, setState] as const;\n}\n"]},"metadata":{},"sourceType":"module"}