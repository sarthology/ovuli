{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\index.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport Day from \"./day/basic\";\nimport UnitDay from \"./day/period\";\nimport MultiDotDay from \"./day/multi-dot\";\nimport MultiPeriodDay from \"./day/multi-period\";\nimport SingleDay from \"./day/custom\";\nimport CalendarHeader from \"./header\";\nimport shouldComponentUpdate from \"./updater\";\nimport { SELECT_DATE_SLOT } from \"../testIDs\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\nvar EmptyArray = [];\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.style = styleConstructor(_this.props.theme);\n    _this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n    _this.updateMonth = _this.updateMonth.bind(_assertThisInitialized(_this));\n    _this.addMonth = _this.addMonth.bind(_assertThisInitialized(_this));\n    _this.pressDay = _this.pressDay.bind(_assertThisInitialized(_this));\n    _this.longPressDay = _this.longPressDay.bind(_assertThisInitialized(_this));\n    _this.shouldComponentUpdate = shouldComponentUpdate;\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var current = parseDate(nextProps.current);\n\n      if (current && current.toString('yyyy MM') !== this.state.currentMonth.toString('yyyy MM')) {\n        this.setState({\n          currentMonth: current.clone()\n        });\n      }\n    }\n  }, {\n    key: \"updateMonth\",\n    value: function updateMonth(day, doNotTriggerListeners) {\n      var _this2 = this;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          if (_this2.props.onMonthChange) {\n            _this2.props.onMonthChange(xdateToData(currMont));\n          }\n\n          if (_this2.props.onVisibleMonthsChange) {\n            _this2.props.onVisibleMonthsChange([xdateToData(currMont)]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_handleDayInteraction\",\n    value: function _handleDayInteraction(date, interaction) {\n      var day = parseDate(date);\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n\n      if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n        var shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(xdateToData(day));\n        }\n      }\n    }\n  }, {\n    key: \"pressDay\",\n    value: function pressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayPress);\n    }\n  }, {\n    key: \"longPressDay\",\n    value: function longPressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayLongPress);\n    }\n  }, {\n    key: \"addMonth\",\n    value: function addMonth(count) {\n      this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n      var state = '';\n\n      if (this.props.disabledByDefault) {\n        state = 'disabled';\n      } else if (minDate && !dateutils.isGTE(day, minDate) || maxDate && !dateutils.isLTE(day, maxDate)) {\n        state = 'disabled';\n      } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n        state = 'disabled';\n      } else if (dateutils.sameDate(day, XDate())) {\n        state = 'today';\n      }\n\n      if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        });\n      }\n\n      var DayComp = this.getDayComponent();\n      var date = day.getDate();\n      var dateAsObject = xdateToData(day);\n      var accessibilityLabel = (state === 'today' ? 'today' : '') + \" \" + day.toString('dddd MMMM d') + \" \" + this.getMarkingLabel(day);\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }, React.createElement(DayComp, {\n        testID: SELECT_DATE_SLOT + \"-\" + dateAsObject.dateString,\n        state: state,\n        theme: this.props.theme,\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        date: dateAsObject,\n        marking: this.getDateMarking(day),\n        accessibilityLabel: accessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, date));\n    }\n  }, {\n    key: \"getMarkingLabel\",\n    value: function getMarkingLabel(day) {\n      var label = '';\n      var marking = this.getDateMarking(day);\n\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      if (this.props.dayComponent) {\n        return this.props.dayComponent;\n      }\n\n      switch (this.props.markingType) {\n        case 'period':\n          return UnitDay;\n\n        case 'multi-dot':\n          return MultiDotDay;\n\n        case 'multi-period':\n          return MultiPeriodDay;\n\n        case 'custom':\n          return SingleDay;\n\n        default:\n          return Day;\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      if (!this.props.markedDates) {\n        return false;\n      }\n\n      var dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"renderWeekNumber\",\n    value: function renderWeekNumber(weekNumber) {\n      return React.createElement(Day, {\n        key: \"week-\" + weekNumber,\n        theme: this.props.theme,\n        marking: {\n          disableTouchEvent: true\n        },\n        state: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        }\n      }, weekNumber);\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this3 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this3.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        }\n      }, week);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var days = dateutils.page(this.state.currentMonth, this.props.firstDay);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      var indicator;\n      var current = parseDate(this.props.current);\n\n      if (current) {\n        var lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n\n        if (this.props.displayLoadingIndicator && !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      return React.createElement(View, {\n        style: [this.style.container, this.props.style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        }\n      }, React.createElement(CalendarHeader, {\n        testID: this.props.testID,\n        ref: function ref(c) {\n          return _this4.header = c;\n        },\n        style: this.props.headerStyle,\n        theme: this.props.theme,\n        hideArrows: this.props.hideArrows,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        showIndicator: indicator,\n        firstDay: this.props.firstDay,\n        renderArrow: this.props.renderArrow,\n        monthFormat: this.props.monthFormat,\n        hideDayNames: this.props.hideDayNames,\n        weekNumbers: this.props.showWeekNumbers,\n        onPressArrowLeft: this.props.onPressArrowLeft,\n        onPressArrowRight: this.props.onPressArrowRight,\n        webAriaLevel: this.props.webAriaLevel,\n        disableArrowLeft: this.props.disableArrowLeft,\n        disableArrowRight: this.props.disableArrowRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        }\n      }), React.createElement(View, {\n        style: this.style.monthView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        }\n      }, weeks));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n  theme: PropTypes.object,\n  markedDates: PropTypes.object,\n  style: viewPropTypes.style,\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markingType: PropTypes.string,\n  hideArrows: PropTypes.bool,\n  displayLoadingIndicator: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  renderArrow: PropTypes.func,\n  dayComponent: PropTypes.any,\n  monthFormat: PropTypes.string,\n  disableMonthChange: PropTypes.bool,\n  hideDayNames: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  disableArrowLeft: PropTypes.bool,\n  disableArrowRight: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  webAriaLevel: PropTypes.number\n};\nexport default Calendar;","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-calendars/src/calendar/index.js"],"names":["React","Component","PropTypes","XDate","dateutils","xdateToData","parseDate","styleConstructor","Day","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","CalendarHeader","shouldComponentUpdate","SELECT_DATE_SLOT","viewPropTypes","ViewPropTypes","View","propTypes","EmptyArray","Calendar","props","style","theme","state","currentMonth","current","updateMonth","bind","addMonth","pressDay","longPressDay","nextProps","toString","setState","clone","day","doNotTriggerListeners","currMont","onMonthChange","onVisibleMonthsChange","date","interaction","minDate","maxDate","isGTE","isLTE","shouldUpdateMonth","disableMonthChange","undefined","_handleDayInteraction","onDayPress","onDayLongPress","count","addMonths","id","disabledByDefault","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","getDate","dateAsObject","accessibilityLabel","getMarkingLabel","alignItems","dateString","getDateMarking","label","marking","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","markedDates","dates","length","weekNumber","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","renderWeekNumber","getWeek","page","firstDay","weeks","renderWeek","splice","indicator","lastMonthOfDay","setDate","addDays","displayLoadingIndicator","container","accessibilityElementsHidden","importantForAccessibility","testID","c","header","headerStyle","hideArrows","renderArrow","monthFormat","hideDayNames","onPressArrowLeft","onPressArrowRight","webAriaLevel","disableArrowLeft","disableArrowRight","monthView","displayName","object","any","number","string","bool","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {View, ViewPropTypes} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport styleConstructor from './style';\nimport Day from './day/basic';\nimport UnitDay from './day/period';\nimport MultiDotDay from './day/multi-dot';\nimport MultiPeriodDay from './day/multi-period';\nimport SingleDay from './day/custom';\nimport CalendarHeader from './header';\nimport shouldComponentUpdate from './updater';\nimport {SELECT_DATE_SLOT} from '../testIDs';\n\n\n//Fallback when RN version is < 0.44\nconst viewPropTypes = ViewPropTypes || View.propTypes;\nconst EmptyArray = [];\n\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n  static displayName = 'Calendar';\n\n  static propTypes = {\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** Collection of dates that have to be marked. Default = {} */\n    markedDates: PropTypes.object,\n    /** Specify style for calendar container element. Default = {} */\n    style: viewPropTypes.style,\n    /** Initially visible month. Default = Date() */\n    current: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\n    markingType: PropTypes.string,\n    /** Hide month navigation arrows. Default = false */\n    hideArrows: PropTypes.bool,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Do not show days of other months in month page. Default = false */\n    hideExtraDays: PropTypes.bool,\n    /** Handler which gets executed on day press. Default = undefined */\n    onDayPress: PropTypes.func,\n    /** Handler which gets executed on day long press. Default = undefined */\n    onDayLongPress: PropTypes.func,\n    /** Handler which gets executed when month changes in calendar. Default = undefined */\n    onMonthChange: PropTypes.func,\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n    onVisibleMonthsChange: PropTypes.func,\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n    renderArrow: PropTypes.func,\n    /** Provide custom day rendering component */\n    dayComponent: PropTypes.any,\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n    disableMonthChange: PropTypes.bool,\n    /**  Hide day names. Default = false */\n    hideDayNames: PropTypes.bool,\n    /** Disable days by default. Default = false */\n    disabledByDefault: PropTypes.bool,\n    /** Show week numbers. Default = false */\n    showWeekNumbers: PropTypes.bool,\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n    onPressArrowLeft: PropTypes.func,\n    /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n    onPressArrowRight: PropTypes.func,\n    /** Disable left arrow. Default = false */\n    disableArrowLeft: PropTypes.bool,\n    /** Disable right arrow. Default = false */\n    disableArrowRight: PropTypes.bool,\n    /** Style passed to the header */\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n    webAriaLevel: PropTypes.number\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(this.props.theme);\n\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n\n    this.updateMonth = this.updateMonth.bind(this);\n    this.addMonth = this.addMonth.bind(this);\n    this.pressDay = this.pressDay.bind(this);\n    this.longPressDay = this.longPressDay.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const current = parseDate(nextProps.current);\n    if (current && current.toString('yyyy MM') !== this.state.currentMonth.toString('yyyy MM')) {\n      this.setState({\n        currentMonth: current.clone()\n      });\n    }\n  }\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n    this.setState({\n      currentMonth: day.clone()\n    }, () => {\n      if (!doNotTriggerListeners) {\n        const currMont = this.state.currentMonth.clone();\n        if (this.props.onMonthChange) {\n          this.props.onMonthChange(xdateToData(currMont));\n        }\n        if (this.props.onVisibleMonthsChange) {\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n        }\n      }\n    });\n  }\n\n  _handleDayInteraction(date, interaction) {\n    const day = parseDate(date);\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      const shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayPress);\n  }\n\n  longPressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayLongPress);\n  }\n\n  addMonth(count) {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  }\n\n  renderDay(day, id) {\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    let state = '';\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if ((minDate && !dateutils.isGTE(day, minDate)) || (maxDate && !dateutils.isLTE(day, maxDate))) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n      return (<View key={id} style={{flex: 1}}/>);\n    }\n\n    const DayComp = this.getDayComponent();\n    const date = day.getDate();\n    const dateAsObject = xdateToData(day);\n    const accessibilityLabel = `${state === 'today' ? 'today' : ''} ${day.toString('dddd MMMM d')} ${this.getMarkingLabel(day)}`;\n\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\n        <DayComp\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\n          state={state}\n          theme={this.props.theme}\n          onPress={this.pressDay}\n          onLongPress={this.longPressDay}\n          date={dateAsObject}\n          marking={this.getDateMarking(day)}\n          accessibilityLabel={accessibilityLabel}\n        >\n          {date}\n        </DayComp>\n      </View>\n    );\n  }\n\n  getMarkingLabel(day) {\n    let label = '';\n    const marking = this.getDateMarking(day);\n    \n    if (marking.accessibilityLabel) {\n      return marking.accessibilityLabel;\n    }\n    \n    if (marking.selected) {\n      label += 'selected ';\n      if (!marking.marked) {\n        label += 'You have no entries for this day ';\n      }\n    } \n    if (marking.marked) {\n      label += 'You have entries for this day ';\n    } \n    if (marking.startingDay) {\n      label += 'period start ';\n    } \n    if (marking.endingDay) {\n      label += 'period end ';\n    }\n    if (marking.disabled || marking.disableTouchEvent) {\n      label += 'disabled ';\n    }\n    return label;\n  }\n\n  getDayComponent() {\n    if (this.props.dayComponent) {\n      return this.props.dayComponent;\n    }\n\n    switch (this.props.markingType) {\n    case 'period':\n      return UnitDay;\n    case 'multi-dot':\n      return MultiDotDay;\n    case 'multi-period':\n      return MultiPeriodDay;\n    case 'custom':\n      return SingleDay;\n    default:\n      return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    if (!this.props.markedDates) {\n      return false;\n    }\n\n    const dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  renderWeekNumber(weekNumber) {\n    return (\n      <Day \n        key={`week-${weekNumber}`} \n        theme={this.props.theme} \n        marking={{disableTouchEvent: true}} \n        state='disabled'\n      >\n        {weekNumber}\n      </Day>\n    );\n  }\n\n  renderWeek(days, id) {\n    const week = [];\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return (<View style={this.style.week} key={id}>{week}</View>);\n  }\n\n  render() {\n    const days = dateutils.page(this.state.currentMonth, this.props.firstDay);\n    const weeks = [];\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    let indicator;\n    const current = parseDate(this.props.current);\n    if (current) {\n      const lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n      if (this.props.displayLoadingIndicator &&\n          !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    return (\n      <View \n        style={[this.style.container, this.props.style]}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n        importantForAccessibility={this.props.importantForAccessibility} // Android\n      >\n        <CalendarHeader\n          testID={this.props.testID}\n          ref={c => this.header = c}\n          style={this.props.headerStyle}\n          theme={this.props.theme}\n          hideArrows={this.props.hideArrows}\n          month={this.state.currentMonth}\n          addMonth={this.addMonth}\n          showIndicator={indicator}\n          firstDay={this.props.firstDay}\n          renderArrow={this.props.renderArrow}\n          monthFormat={this.props.monthFormat}\n          hideDayNames={this.props.hideDayNames}\n          weekNumbers={this.props.showWeekNumbers}\n          onPressArrowLeft={this.props.onPressArrowLeft}\n          onPressArrowRight={this.props.onPressArrowRight}\n          webAriaLevel={this.props.webAriaLevel}\n          disableArrowLeft={this.props.disableArrowLeft}\n          disableArrowRight={this.props.disableArrowRight}\n        />\n        <View style={this.style.monthView}>{weeks}</View>\n      </View>);\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}