{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"F:\\\\MobileProjects\\\\ovuli\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\agendaList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\n\nvar commons = require(\"./commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\nvar AgendaList = function (_Component) {\n  _inherits(AgendaList, _Component);\n\n  function AgendaList(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AgendaList).call(this, props));\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      if (viewableItems && !_this.sectionScroll) {\n        var topSection = _.get(viewableItems[0], 'section.title');\n\n        if (topSection && topSection !== _this._topSection) {\n          _this._topSection = topSection;\n\n          if (_this.didScroll) {\n            _.invoke(_this.props.context, 'setDate', _this._topSection, UPDATE_SOURCES.LIST_DRAG);\n          }\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.didScroll) {\n        _this.didScroll = true;\n      }\n\n      _.invoke(_this.props, 'onScroll', event);\n    };\n\n    _this.onMomentumScrollBegin = function (event) {\n      _.invoke(_this.props.context, 'setDisabled', true);\n\n      _.invoke(_this.props, 'onMomentumScrollBegin', event);\n    };\n\n    _this.onMomentumScrollEnd = function (event) {\n      _this.sectionScroll = false;\n\n      _.invoke(_this.props.context, 'setDisabled', false);\n\n      _.invoke(_this.props, 'onMomentumScrollEnd', event);\n    };\n\n    _this.onHeaderLayout = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      _this.sectionHeight = nativeEvent.layout.height;\n    };\n\n    _this.renderSectionHeader = function (_ref3) {\n      var title = _ref3.section.title;\n      var today = XDate().toString(_this.props.dayFormat);\n      var date = XDate(title).toString(_this.props.dayFormat);\n      var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n      var sectionTitle = date === today ? todayString + \", \" + date : date;\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: [_this.style.sectionText, _this.props.sectionStyle],\n        onLayout: _this.onHeaderLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, sectionTitle);\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return _.isFunction(_this.props.keyExtractor) ? _this.props.keyExtractor(item, index) : String(index);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this._topSection = _.get(props, 'sections[0].title');\n    _this.didScroll = false;\n    _this.sectionScroll = false;\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.list = React.createRef();\n    return _this;\n  }\n\n  _createClass(AgendaList, [{\n    key: \"getSectionIndex\",\n    value: function getSectionIndex(date) {\n      var i;\n\n      _.map(this.props.sections, function (section, index) {\n        if (section.title === date) {\n          i = index;\n          return;\n        }\n      });\n\n      return i;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date) {\n        if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n          var sectionIndex = this.getSectionIndex(date);\n          this.scrollToSection(sectionIndex);\n        }\n      }\n    }\n  }, {\n    key: \"scrollToSection\",\n    value: function scrollToSection(sectionIndex) {\n      if (this.list.current && sectionIndex !== undefined) {\n        this.sectionScroll = true;\n        this._topSection = this.props.sections[sectionIndex].title;\n        this.list.current.scrollToLocation({\n          animated: true,\n          sectionIndex: sectionIndex,\n          itemIndex: 0,\n          viewPosition: 0,\n          viewOffset: commons.isAndroid ? this.sectionHeight : 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SectionList, _extends({}, this.props, {\n        ref: this.list,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        renderSectionHeader: this.renderSectionHeader,\n        onScroll: this.onScroll,\n        onMomentumScrollBegin: this.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }));\n    }\n  }]);\n\n  return AgendaList;\n}(Component);\n\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = _objectSpread({}, SectionList.propTypes, {\n  dayFormat: PropTypes.string,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n});\nAgendaList.defaultProps = {\n  dayFormat: 'dddd, MMM d',\n  stickySectionHeadersEnabled: true\n};\nexport default asCalendarConsumer(AgendaList);","map":{"version":3,"sources":["F:/MobileProjects/ovuli/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["_","React","Component","PropTypes","XDate","styleConstructor","asCalendarConsumer","commons","require","UPDATE_SOURCES","AgendaList","props","onViewableItemsChanged","viewableItems","sectionScroll","topSection","get","_topSection","didScroll","invoke","context","LIST_DRAG","onScroll","event","onMomentumScrollBegin","onMomentumScrollEnd","onHeaderLayout","nativeEvent","sectionHeight","layout","height","renderSectionHeader","title","section","today","toString","dayFormat","date","todayString","locales","defaultLocale","sectionTitle","style","sectionText","sectionStyle","keyExtractor","item","index","isFunction","String","theme","viewabilityConfig","itemVisiblePercentThreshold","list","createRef","i","map","sections","prevProps","updateSource","CALENDAR_INIT","sectionIndex","getSectionIndex","scrollToSection","current","undefined","scrollToLocation","animated","itemIndex","viewPosition","viewOffset","isAndroid","displayName","propTypes","SectionList","string","oneOfType","object","number","array","defaultProps","stickySectionHeadersEnabled"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {SectionList, Text} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\n\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\n/**\n * @description: AgendaList component\n * @extends: SectionList\n * @notes: Should be wraped in CalendarProvider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass AgendaList extends Component {\n  static displayName = 'AgendaList';\n\n  static propTypes = {\n    ...SectionList.propTypes,\n    /** day format in section title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    dayFormat: PropTypes.string,\n    /** style passed to the section view */\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n  }\n\n  static defaultProps = {\n    dayFormat: 'dddd, MMM d',\n    stickySectionHeadersEnabled: true\n  }\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this._topSection = _.get(props, 'sections[0].title');\n    this.didScroll = false;\n    this.sectionScroll = false;\n\n    this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n    };\n    this.list = React.createRef();\n  }\n\n  getSectionIndex(date) {\n    let i;\n    _.map(this.props.sections, (section, index) => {\n      // NOTE: sections titles should match current date format!!!\n      if (section.title === date) {\n        i = index;\n        return;\n      }\n    });\n    return i;\n  }\n\n  componentDidUpdate(prevProps) {\n    const {updateSource, date} = this.props.context;\n    if (date !== prevProps.context.date) {\n      // NOTE: on first init data should set first section to the current date!!!\n      if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n        const sectionIndex = this.getSectionIndex(date);\n        this.scrollToSection(sectionIndex);\n      }\n    }\n  }\n\n  scrollToSection(sectionIndex) {\n    if (this.list.current && sectionIndex !== undefined) {\n      this.sectionScroll = true; // to avoid setDate() in onViewableItemsChanged\n      this._topSection = this.props.sections[sectionIndex].title;\n\n      this.list.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 0,\n        viewPosition: 0, // position at the top\n        viewOffset: commons.isAndroid ? this.sectionHeight : 0\n      });\n    }\n  }\n\n  onViewableItemsChanged = ({viewableItems}) => {\n    if (viewableItems && !this.sectionScroll) {\n      const topSection = _.get(viewableItems[0], 'section.title');\n      if (topSection && topSection !== this._topSection) {\n        this._topSection = topSection;\n        if (this.didScroll) { // to avoid setDate() on first load (while setting the initial context.date value)\n          _.invoke(this.props.context, 'setDate', this._topSection, UPDATE_SOURCES.LIST_DRAG);\n        }\n      }\n    }\n  }\n\n  onScroll = (event) => {\n    if (!this.didScroll) {\n      this.didScroll = true;\n    }\n    _.invoke(this.props, 'onScroll', event);\n  }\n\n  onMomentumScrollBegin = (event) => {\n    _.invoke(this.props.context, 'setDisabled', true);\n    _.invoke(this.props, 'onMomentumScrollBegin', event);\n  }\n\n  onMomentumScrollEnd = (event) => {\n    // when list momentum ends AND when scrollToSection scroll ends\n    this.sectionScroll = false;\n    _.invoke(this.props.context, 'setDisabled', false);\n    _.invoke(this.props, 'onMomentumScrollEnd', event);\n  }\n\n  onHeaderLayout = ({nativeEvent}) => {\n    this.sectionHeight = nativeEvent.layout.height;\n  }\n\n  renderSectionHeader = ({section: {title}}) => {\n    const today = XDate().toString(this.props.dayFormat);\n    const date = XDate(title).toString(this.props.dayFormat);\n    const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n    const sectionTitle = date === today ? `${todayString}, ${date}` : date;\n    \n    return (\n      <Text allowFontScaling={false} style={[this.style.sectionText, this.props.sectionStyle]} onLayout={this.onHeaderLayout}>{sectionTitle}</Text>\n    );\n  }\n\n  keyExtractor = (item, index) => {\n    return _.isFunction(this.props.keyExtractor) ? this.props.keyExtractor(item, index) : String(index);\n  }\n\n  render() {\n    return (\n      <SectionList\n        {...this.props}\n        ref={this.list}\n        keyExtractor={this.keyExtractor}\n        showsVerticalScrollIndicator={false}\n        onViewableItemsChanged={this.onViewableItemsChanged}\n        viewabilityConfig={this.viewabilityConfig}\n        renderSectionHeader={this.renderSectionHeader}\n        onScroll={this.onScroll}\n        onMomentumScrollBegin={this.onMomentumScrollBegin}\n        onMomentumScrollEnd={this.onMomentumScrollEnd}\n        // onScrollToIndexFailed={(info) => { console.warn('onScrollToIndexFailed info: ', info); }}\n        // getItemLayout={this.getItemLayout} // onViewableItemsChanged is not updated when list scrolls!!!\n      />\n    );\n  }\n\n  // getItemLayout = (data, index) => {\n  //   return {length: commons.screenWidth, offset: commons.screenWidth  * index, index};\n  // }\n}\n\nexport default asCalendarConsumer(AgendaList);\n"]},"metadata":{},"sourceType":"module"}